{% extends 'layout/template.html.twig' %}
{% block body %}
    <div class="container">
        <h1 class="mb-0 pt-5">Portfolio</h1>
        <a href="https://alexrans.com" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="You're already there silly">link</a>
        - <a target="_blank" href="https://github.com/alex-rans/portfolio">Github</a>
        <h2 class="mt-5">Context</h2>
        <p>I desperately needed a new portfolio because my old one was hosted on my old name, it was boring, bland
        and in general just really generic with not a lot of personality. I wanted to create a new portfolio that
        reflects who I am in the design and what I am interested in, as well as showcasing my projects and skills.
        I did not make a design or brainstormed about how I was going to achieve this. I just did the thing and added
        stuff that just said "Alex".</p>
        <h2>Framework &amp; design</h2>
        <p>The portfolio I created was developed using the Symfony framework, a powerful PHP framework renowned for its
            flexibility, modularity, and extensive set of tools and components. Choosing to build the portfolio with
            Symfony allowed me to leverage its robust features and benefits, making the development process more
            efficient and streamlined. When it came to designing the portfolio, I wanted to infuse a personal touch
            that reflected my individual style and aesthetic preferences. To achieve this, I incorporated soft pastel
            colors. In addition to the color scheme, I adopted a unique and visually engaging layout by integrating
            polaroids. This approach not only adds a playful and nostalgic element but also allows for creative
            presentation of project snapshots or visual representations. </p>
        <h2>Hosting</h2>
        <p>I decided to utilize AWS EC2 for hosting. The motivation behind choosing AWS EC2 was its flexibility,
            scalability, and cost. Another reason was establish a seamless deployment process, enabling automatic
            deployment whenever changes were pushed to the Git repository. To achieve this, I employed continuous
            integration using GitHub Actions. However, leveraging AWS EC2 and configuring the deployment process
            presented a new set of challenges for me, as I had not previously worked with AWS. Fortunately,
            I had prior experience with managing virtual private servers and setting up web servers, which proved
            beneficial during this undertaking. Building upon my existing knowledge, I delved into the intricacies
            of AWS EC2, familiarizing myself with its features and functionalities.</p>
{#        <h2>Final words</h2>#}
{#        <p>I learned a lot about hosting, AWS and Github actions when developing this portfolio. In hindsight, it#}
{#            probably would've been better to use a Javascript template engine or to use React or Angular instead of#}
{#            a PHP framework.</p>#}
    </div>
{% endblock %}